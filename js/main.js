(function(){
    function createMap(){
        //map options
        let minZoom = 15,
            maxZoom = 17,
            bounds = ([
                [43.0669, -89.4634],
                [43.0943, -89.3885]
            ]);
        //map object
        let map = L.map('map', {
            minZoom:minZoom,
            maxZoom:maxZoom,
            maxBounds:bounds
        }).setView([43.075, -89.40], 16);
        //basemap tilelayer
        let baseLayer = L.tileLayer('data/basemap_test/{z}/{x}/{y}.jpg', {
            minZoom:minZoom,
            maxZoom:maxZoom,
            maxBounds:bounds,       
            attribution: 'Generated by QTiles',   
        }).addTo(map);     

        addSiteData(map);
    }
    //function to add sites to the map
    function addSiteData(map){
        //access modal element
        let storyElem = document.getElementById('story-modal'),
            storyModal = new bootstrap.Modal(storyElem);
        //get site data
        fetch('data/sites.geojson')
            .then(res => res.json())
            .then(data => {
                let siteLayer = L.geoJson(data, {
                    onEachFeature:function(feature, layer){
                        layer.on('click',function(){
                            //get story element content block
                            var storyContent = document.querySelector('#story-modal-content');
                            //clear story element content block
                            storyContent.innerHTML = "";
                            //show modal
                            storyModal.show();
                            //add content from site to content block
                            feature.properties.story.forEach(function(block){
                                storyContent.insertAdjacentHTML('beforeend', block.content)
                            })
                        })
                    }
                }).addTo(map);
            })
    }
    //function runs when page is finished loading
    window.addEventListener('DOMContentLoaded',(event) => {
        createMap();
    });

})();
